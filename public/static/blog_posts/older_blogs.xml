<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/5.7.11" created="2024-04-18 18:22" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Digital Madness</title>
	<link>https://digital-madness.in</link>
	<description>Chirag Maheshwari&#039;s Webspace</description>
	<pubDate>Thu, 18 Apr 2024 18:22:21 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://digital-madness.in</wp:base_site_url>
	<wp:base_blog_url>https://digital-madness.in</wp:base_blog_url>

		<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[chirag1992m]]></wp:author_login><wp:author_email><![CDATA[chirag1992m.cc@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[chirag1992m]]></wp:author_display_name><wp:author_first_name><![CDATA[chirag]]></wp:author_first_name><wp:author_last_name><![CDATA[maheshwari]]></wp:author_last_name></wp:author>

				
	<generator>https://wordpress.org/?v=5.7.11</generator>

		<item>
		<title><![CDATA[Apache Thrift, RPC's between Java(server)-PHP(client), Hello World Application]]></title>
		<link>https://digital-madness.in/2012/apache-thrift-rpcs-between-javaserver-phpclient-hello-world-application/</link>
		<pubDate>Thu, 29 Nov 2012 14:10:00 +0000</pubDate>
		<dc:creator><![CDATA[chirag1992m]]></dc:creator>
		<guid isPermaLink="false">http://digital-madness.in/blog/2012/%month%/apache-thrift-rpcs-between-javaserver-phpclient-hello-world-application/</guid>
		<description></description>
		<content:encoded><![CDATA[<div dir="ltr">A more comprehensive tutorial can be found <a href="http://digital-madness.in/blog/wp-content/uploads/2012/11/BSD_08_2013.8-18.pdf" target="_blank" rel="noopener">here</a>.</div>
<div dir="ltr">Code can be downloaded from: <a href="https://github.com/chirag1992m/apacheThriftHelloWorld">https://github.com/chirag1992m/apacheThriftHelloWorld</a></div>
<div dir="ltr"></div>
<div dir="ltr"><strong><span style="text-decoration: underline;" data-mce-mark="1">HOW TO INSTALL:</span></strong></div>
<div dir="ltr"></div>
<div dir="ltr"><b>type(for the pre-requisites): </b></div>
<div dir="ltr">

[bash]
sudo apt-get install libboost-dev libboost-test-dev libboost-program-options-dev libevent-dev automake libtool flex bison pkg-config g++ libssl-dev
sudo apt-get install php5-dev php5-cli #for php
sudo apt-get install libglib2.0-dev #for c_glib[/bash]

For the final installation, download the tarball from the website, <span style="text-decoration: underline;" data-mce-mark="1"><a href="http://thrift.apache.org/download/">http://thrift.apache.org/download/
</a></span><span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;" data-mce-mark="1">Then to install the tarball: </span>
<div>

[bash]tar -xvf /path/to/tarball
cd /path/to/extraction
./configure
sudo make
sudo make install[/bash]

Also install the eclipse editor for thrift files.
Eclipse --&gt; help --&gt; Install new Software --&gt;
add the URL: <a href="http://thrift4eclipse.sourceforge.net/updatesite/">http://thrift4eclipse.sourceforge.net/updatesite/</a>
tick the only package shown and install it.

<strong><span style="text-decoration: underline;" data-mce-mark="1">Compiling the REQUIRED LIBRARIES (for the different languages that has to be supported):</span></strong>
<ul>
 	<li><em><strong>for</strong></em><strong> JAVA</strong><strong>
</strong><em>Go to folder</em> /path/to/thrift-version/folder/lib/java/
execute the command “ant” - compiles using apache ant
Now the build folder contains all the lib files required.</li>
 	<li><em><strong>for</strong></em><strong> PHP
</strong>No need for compiling any files, php is used in its raw form.<strong>
</strong></li>
</ul>
<strong><span style="text-decoration: underline;" data-mce-mark="1">Making the thrift file:</span></strong>

Tutorial can be found here : <a href="http://diwakergupta.github.com/thrift-missing-guide/">http://diwakergupta.github.com/thrift-missing-guide/</a>
Thrift file will include all the services and structures shared between the two languages.

Start with:

[sourcecode]namespace java package-name[/sourcecode]

<strong><span style="text-decoration: underline;" data-mce-mark="1">Making the JAVA server:</span></strong>

</div>
<div>Make a new project in Eclipse with type, “Dynamic Web Project”.</div>
<div>Put the “thrift file” in the &lt;project-name&gt;/Java Resources/src/ folder.
Copy the lib files (libthrift-&lt;version&gt;.jar, build/lib/*) to &lt;project-name&gt;/WebContent/WEB-INF/lib/ folder.</div>
<div>

Generate the auto-generated java files from the file using the command:

[bash]cd path/to/thrift-file/
thrift --gen java -out thrift-file-name
[/bash]

Now we have to implement the services mentioned in the thrift-file by:

</div>
<div>
<ul>
 	<li>make a new file in the same package &lt;package-name&gt;.</li>
 	<li>Wrie a class &lt;service-implement&gt; implementing &lt;service-name&gt;.Iface (like this implement all the services)</li>
</ul>
<em><strong>Now we have to make the server file:</strong></em>

[java]
public class server_name implements Runnable {
	/* port to listen */
	private static final int PORT = 9090;
	public void run() {
		try {
			TServerSocket serverTransport = new TServerSocket(PORT);
			HelloService.Processor processor = new HelloService.Processor(new ());
			TServer server = new TThreadPoolServer(new TThreadPoolServer.Args(serverTransport).processor(processor));
			System.out.println(&quot;Starting server on port: &quot;+PORT);
			server.serve();
		} catch(TTransportException e) {
			System.out.println(&quot;Message: &quot;+e.getMessage());
			System.out.println(&quot;StackTrace: &quot;);
			e.printStackTrace();
		}
	}

	public static void main(String[] args) {
		new Thread(new server_name()).run();
	}
}
[/java]

<div align="LEFT">Run the server as a java application. This <em>completes</em> the making of the server.</div>
<div align="LEFT"><strong>NOTE: To stop the server you'll need to kill the process via the console.</strong></div>
<div align="LEFT"></div>
<div style="margin-top: 10px;" align="LEFT"><strong><span style="text-decoration: underline;" data-mce-mark="1">Making the PHP client:</span></strong></div>
<div align="LEFT"></div>
<div align="LEFT">First auto-generate the PHP package from the thrift file already created using the command:</div>
<div align="LEFT">

[bash]cd path/to/thrift-file/
thrift --gen php thrift-file-name
[/bash]

Create a new directory named "thrift" and copy all the php library files available in the directory /path/to/thrift-version-folder/lib/php/src/ to the newly created directory. Also create a new sub-directory named "packages" in "thrift" directory, and copy the auto-generated PHP package here.

Create a new file &lt;client-file&gt;.php adjacent to the "thrift" directory.
Contents of the PHP file will be:

[php]
// defining the port and server to listen
define(&quot;PORT&quot;, '9090');
define(&quot;SERVER&quot;, 'localhost');

//Global variable where the php library files are stored
$GLOBALS['THRIFT_ROOT'] = 'thrift';

//including the library files
require_once $GLOBALS['THRIFT_ROOT'].'/Thrift.php';
require_once $GLOBALS['THRIFT_ROOT'].'/protocol/TBinaryProtocol.php';
require_once $GLOBALS['THRIFT_ROOT'].'/transport/TSocket.php';
require_once $GLOBALS['THRIFT_ROOT'].'/transport/TBufferedTransport.php';

//loading the auto-generated package
require_once $GLOBALS['THRIFT_ROOT'].'/packages/hello/HelloService.php';

try {
	//create a thrift connection
	$socket = new TSocket(SERVER, PORT);
	$transport = new TBufferedTransport($socket);
	$protocol = new TBinaryProtocol($transport);
	
	//create a new hello service client
	$client = new HelloServiceClient($protocol);
	
	//open the connection
	$transport-&gt;open();
	
	//calling the service
	$result = $client-&gt;sayHello();
	echo &quot;Result: &quot;.$result;
	
	//closing the connection
	$transport-&gt;close();
} catch(TException $tx) {
	echo &quot;Thrift Exception: &quot;.$tx-&gt;getMessage().&quot;\r\n&quot;;
}
[/php]

<div align="LEFT"><strong><span style="text-decoration: underline;">To TEST:</span></strong></div>
<div align="LEFT"></div>
<div align="LEFT">Run the JAVA server.</div>
<div align="LEFT">            CONSOLE: "Starting server on port: 9090"</div>
<div align="LEFT"></div>
<div align="LEFT">Run the &lt;client-file&gt;.php using the command: php5 client.php</div>
<div align="LEFT">            CONSOLE: "Result: HelloWorld!!"</div>
<div align="LEFT"></div>
<div align="LEFT">Finally make a directory "client" and copy the client related files here. Also, make a new directory names "server", copy all the java server files here. So we have a simple apache thrift application making a bridge between between java(server) and php(client).</div>
</div>
</div>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date><![CDATA[2012-11-29 14:10:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-11-29 14:10:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-02-17 17:59:37]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-02-17 17:59:37]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[apache-thrift-rpcs-between-javaserver-phpclient-hello-world-application]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="apache-thrift-2"><![CDATA[apache thrift]]></category>
		<category domain="category" nicename="inter-process-communication-ipc"><![CDATA[Inter Process Communication (IPC)]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="java-server-2"><![CDATA[java (server)]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="post_tag" nicename="php-client"><![CDATA[php (client)]]></category>
		<category domain="post_tag" nicename="rpc"><![CDATA[RPC]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[ubuntu]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_blog]]></wp:meta_key>
		<wp:meta_value><![CDATA[chirag1992m.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_author]]></wp:meta_key>
		<wp:meta_value><![CDATA[chirag maheshwari]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_permalink]]></wp:meta_key>
		<wp:meta_value><![CDATA[/2012/11/apache-thrift-rpcs-between-javaserver.html]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_blogger_self]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://www.blogger.com/feeds/4569713466918303892/posts/default/1381889636235163214]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Memory profiling in C++]]></title>
		<link>https://digital-madness.in/2012/memory-profiling-in-c/</link>
		<pubDate>Mon, 28 May 2012 19:54:00 +0000</pubDate>
		<dc:creator><![CDATA[chirag1992m]]></dc:creator>
		<guid isPermaLink="false">http://digital-madness.in/blog/2012/%month%/memory-profiling-in-c/</guid>
		<description></description>
		<content:encoded><![CDATA[<div dir="ltr"><u><b>Code profiling</b></u> as said in the earlier post is the dynamic analysis of resources used by a program or a small section of it.

Here we will discuss about monitoring the <u>memory</u> during a run of a C++ program. Monitoring the memory greatly helps in optimizing your code. Memory leaks (when memory is not released back to the operating system and the operating system stops the program in the middle because of the over-usage of memory), swapping of data (swapping of data between main memory and disk greatly reduces the performance as disk IO is slow compared to main memory IO), free memory available at any point of time, when and where memory is allocated and freed, inaccessible areas of stack data, usage of cache (proper usage of cache memory can increase your performance), heap memory usages.

<b>NOTE:</b> using memory management tools reduces the performance of the program (it could get 100 times slower :O ). So it should only be done for testing, and development and not during production phase.

first let us see the various tools freely available to work for us:
<ul>
 	<li><u><b>debugger</b></u> - just use your C++ debugger to keep track of memory leaks, memory allocations step-by-step. But, this process is very slow. Instead of compiling using g++, compile the program using "gdb".

[sourcecode]    gdb file.cpp[/sourcecode]

<u><b>
</b></u></li>
 	<li><u><b>sysstat</b></u> - just install this package using the command (sudo apt-get install sysstat).
Using the command "free" will tell you memory statistics at that point of time. (you can use the -m option to show the memory in megabytes).</li>
 	<li><a href="http://www.valgrind.org/" target="_blank" rel="noopener"><b><u>valgrind</u></b></a> - This is the best tool available freely. (to install type: sudo apt-get install valgrind). It has the various subtools:
<ul>
 	<li>Memcheck - When a program is run under memcheck's supervision, all reads and writes of memory are checked, and calls to malloc/new/free/delete are intercepted. Memcheck reports errors as soon as they occur, giving the source line number at which it occurred, and also a stack trace of the functions called to reach that line.</li>
 	<li> Cachegrind -its a cache profiler. Tells you which part code has lead to a cache miss. The number of cache misses, number of instructions executed on each line of code.</li>
 	<li>Massif - performs detailed heap profiling. It produces a graph showing heap usage over time, including information about which parts of the program are responsible for the most memory allocations.</li>
</ul>
Valgrind can be easily used from the terminal. When calling your program executable just write "valgrind" before the call using the appropriate options, eg:

[sourcecode]    valgrind --leak-check=yes &lt;myprog&gt; arg1 arg2[/sourcecode]

To know the options and other methods you can refer to its documentation from <a href="http://www.valgrind.org/docs/manual/manual.html" target="_blank" rel="noopener">here</a>.</li>
 	<li><a href="http://www.codeproject.com/Articles/3134/Memory-Leak-and-Exception-Trace-CRT-and-COM-Leaks" target="_blank" rel="noopener"><u><b>leakfinder</b></u></a> - This is a simple GUI application for windows to find leaks in your program with an basic inbuilt code editor.</li>
 	<li><a href="http://code.google.com/p/gperftools/" target="_blank" rel="noopener"><u><b>gperftools</b></u></a> - this is a tool developed by google for use by developers so that they can create more robust applications. Especially of use to those developing multi-threaded applications in C++ with templates. Includes TCMalloc, heap-checker, heap-profiler and cpu-profiler.</li>
 	<li><a href="http://dmalloc.com/" target="_blank" rel="noopener"><u><b>dmalloc</b></u></a> - This is another tool available on the web.</li>
</ul>
The concept used in dmalloc is quite a simple one and we can ourselves make a simple library that can keep track of memory allocations and memory release. This concept is based on <b>function and operator overloading. </b>Here we will overload the new/delete operator. Thus, whenever a memory is allocated or freed, we can print the appropriate information. So let's start,

[cpp]
#include &lt;execinfo.h&gt;   // this is a header file contains the backtrace function

void *caller()
{
      const int target = 3;     // trace three functions back
      void* returnaddresses[target];
      if (backtrace(returnaddresses, target) &lt; target) {
               return NULL;
      }
      return returnaddresses[target-1];
}


void* operator new(size_t size) throw(std::bad_alloc) {
       void* ret = malloc(size);
       if (!ret) throw std::bad_alloc();
       cerr&lt;&lt;&quot;allocate: &quot;&lt;&lt;ret&lt;&lt;&quot; &quot;&lt;&lt;size&lt;&lt;&quot; bytes from &quot;&lt;&lt;caller()&lt;&lt;&quot;\n&quot;;
}


void* operator new[] (size_t size) throw(std::bad_alloc) {
       void* ret = malloc(size);
       if (!ret) throw std::bad_alloc();
       cerr&lt;&lt;&quot;allocate: &quot;&lt;&lt;ret&lt;&lt;&quot; &quot;&lt;&lt;size&lt;&lt;&quot; bytes from &quot;&lt;&lt;caller()&lt;&lt;&quot;\n&quot;;
}

void operator delete(void* data) {
       free(data);
       cerr&lt;&lt;&quot;free: &quot;&lt;&lt;data&lt;&lt;&quot;\n&quot;;
}

void operator delete[] (void* data) {
       free(data);
       cerr&lt;&lt;&quot;free: &quot;&lt;&lt;data&lt;&lt;&quot;\n&quot;; 
}
[/cpp]

Just write this code in a file and then you can include this as a header file in your program whenever you want to monitor your memory allocations and who allocates it. There is no need to write any extra code in your program. Similarly, you can overload the malloc/free functions if new/delete does not work for you.

good luck.

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date><![CDATA[2012-05-28 19:54:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-28 19:54:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-02-17 17:58:34]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-02-17 17:58:34]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[memory-profiling-in-c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="cpp"><![CDATA[C++]]></category>
		<category domain="post_tag" nicename="code-profiling"><![CDATA[code profiling]]></category>
		<category domain="category" nicename="memory"><![CDATA[Memory]]></category>
		<category domain="post_tag" nicename="memory-leaks"><![CDATA[memory leaks]]></category>
		<category domain="post_tag" nicename="memory-profiling"><![CDATA[memory profiling]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_blog]]></wp:meta_key>
		<wp:meta_value><![CDATA[chirag1992m.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_author]]></wp:meta_key>
		<wp:meta_value><![CDATA[chirag maheshwari]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_permalink]]></wp:meta_key>
		<wp:meta_value><![CDATA[/2012/05/memory-profiling-in-c.html]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_blogger_self]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://www.blogger.com/feeds/4569713466918303892/posts/default/5774399009615283172]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Code Profiling for time in C++]]></title>
		<link>https://digital-madness.in/2012/code-profiling-for-time-in-c/</link>
		<pubDate>Thu, 24 May 2012 08:32:00 +0000</pubDate>
		<dc:creator><![CDATA[chirag1992m]]></dc:creator>
		<guid isPermaLink="false">http://digital-madness.in/blog/2012/%month%/code-profiling-for-time-in-c/</guid>
		<description></description>
		<content:encoded><![CDATA[<div dir="ltr"><b><u>Code profiling</u></b> is a very important aspect of programming. First you must be wondering what is code profiling. You can always google it but in simple words "code profiling" is just measuring of the resources used by your program or small sections of your program.

Here I will be talking about code profiling for "time". Dynamically measuring your code for how much time it takes for different input sets is of keen importance when you have to optimise your code. There are many ways you can achieve this,
<ul>
 	<li>there are many unix tools available to do the job for you.
<ul>
 	<li>time - just type time while calling your executable file.
eg: time ./a.out</li>
 	<li>sysstat (to install just type "sudo apt-get install sysstat") - It has many tools available to check the resources used up in the running processes.
While your program is running, you can check up the resources used up your program by the commands "iostat -i", "iostat -c", "iostat -dx". if networking is involved you can use "netstat -i", "netstat -s". To check the memory usage, i.e., free memory and used memory and memory swapped etc., you can type "free -m".</li>
 	<li>callgrind - you can download this tool to profile your code.</li>
</ul>
</li>
 	<li>The simple way is to put a small code inside your code to measure the time. Here I'll tell you how to do that using a small library I have written.</li>
</ul>
Its use as simple as writing:

[sourcecode language="cpp"]
int func() {
    timeit s(“func()”);
    // your code here.
}
[/sourcecode]

It is based on a simple concept that when a object goes out of its scope, its destructor is called. So to time a code snippet, you just have to make an object of the type "timeit" having the <b>same scope</b> as the code snippet. In the above example it will print to the standard error:

<i>           func()       3.21554ms</i>

<i> </i>The object simply times the call between its construction and destruction. If its difficult to maintain the scope of the object by using curly brackets, then you can also use the "new" and "delete" to manually set the scope. The code is rather simple and here it goes:

[cpp]
#include &lt;iostream&gt;
#include &lt;ctime&gt;

class timeit {
    char const *name;
    timespec t_start;

    public:
        
        timeit(char const *temp): name(temp) {
            clock_gettime(CLOCK_REALTIME, &amp;t_start);
        }
        
        ~timeit() {
            timespec t_end;
            clock_gettime(CLOCK_REALTIME, &amp;t_end);
            
            double dur = 1e3 * (t_end.tv_sec - t_start.tv_sec) + 1e-6 * (t_end.tv_nsec - t_start.tv_nsec);
            std::cerr &lt;&lt; name &lt;&lt; '\t' &lt;&lt; std::fixed &lt;&lt; dur &lt;&lt; &quot; ms\n&quot;;
        }
};
[/cpp]

Just include this this code in your program and timeit ;)

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date><![CDATA[2012-05-24 08:32:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-24 08:32:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-02-17 17:58:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-02-17 17:58:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[code-profiling-for-time-in-c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="cpp"><![CDATA[C++]]></category>
		<category domain="post_tag" nicename="code-profiling"><![CDATA[code profiling]]></category>
		<category domain="category" nicename="time"><![CDATA[Time]]></category>
		<category domain="post_tag" nicename="time-profiling"><![CDATA[time profiling]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_blog]]></wp:meta_key>
		<wp:meta_value><![CDATA[chirag1992m.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_author]]></wp:meta_key>
		<wp:meta_value><![CDATA[chirag maheshwari]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_permalink]]></wp:meta_key>
		<wp:meta_value><![CDATA[/2012/05/code-profiling-for-time-in-c.html]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_blogger_self]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://www.blogger.com/feeds/4569713466918303892/posts/default/9011114830882199085]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Amogh]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[noreply@blogger.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/01189377155116180284</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-24 11:50:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-24 11:50:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, if I want to include something in the code itself, I'll probably use time_t start; and time_t end;<br />With this I can time individual portions of my code too, for eg. :<br />time_t start = time(NULL);<br />...<br />Code Block 1<br />...<br />time_t end1 = time(NULL);<br />//time taken to run block 1 = end1-start<br />...<br />Code block 2<br />...<br />time_t end2 = time(NULL);<br />time taken to run block 2 = end2 - end1<br />total time taken till now = end2 - start<br /><br />This gives me more freedom to check times at various levels by just inserting this statement wherever i want. <br />Just an additional method though! :)<br /><br />PS. The only downside is that it returns seconds (not ms), so if your code is too fast, you wont see the difference. But then, maybe you dont even need to have a look at time if its faster than a sec! :P<br />and if you still want an accurate measure (highly accurate), use clock ticks! clock_t (returned by clock func) gives you the no of clock cycles since program execution began. Thats extremely accurate, and if you still want time, just divide this by no of clocks/sec (theres a macro for this too)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[chirag maheshwari]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[noreply@blogger.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/12067178377624599421</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-24 12:08:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-24 12:08:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, yes you can do that. But including "timeit" class and just inserting one line of code in your program is just more elegant. Elegance is the crux of it.<br />As I said, there are already cooked up tools available on the net, and the same thing can be achieved in many different ways. So doing it in the best way is the whole point right??]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>7</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[Aman Gupta]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[noreply@blogger.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09371884680276192388</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-24 12:45:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-24 12:45:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[the writer of this blog is simply a genius ! wow! :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[Harsh Gupta]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[noreply@blogger.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/14706688334855884482</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-25 03:56:41]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-25 03:56:41]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good one...<br />Can you post some good methods to check out the memory usage of the program ?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[chirag maheshwari]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[noreply@blogger.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/12067178377624599421</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-05-25 17:58:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-05-25 17:58:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[sure :)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>10</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[how to hide drive in windows]]></title>
		<link>https://digital-madness.in/2012/how-to-hide-drive-in-windows/</link>
		<pubDate>Sun, 20 May 2012 11:07:00 +0000</pubDate>
		<dc:creator><![CDATA[chirag1992m]]></dc:creator>
		<guid isPermaLink="false">http://digital-madness.in/blog/2012/%month%/how-to-hide-drive-in-windows/</guid>
		<description></description>
		<content:encoded><![CDATA[<div dir="ltr">
<div>Most of you must have wondered if there exists a way without using software to Hide A Drive completely so that it cannot be viewed or accessed without unlocking it. so, here is a easiest method to hide drive simple 4 steps.
Follow The Steps For Do This..</div>
<div></div>
<ul>
 	<li>Goto run type “gpedit.msc” (without quotes)</li>
 	<li> select user configuration —&gt; administrative templates —&gt; windows components —&gt; windows explorer(click on it)</li>
 	<li>On right panel search for hide theses specified drives in my computer.</li>
 	<li>Double click it mark on enable to hide the drive and select drive the which you want to hide. If u wanted to hide all the drives which are on your system then select restrict all drive. To make it unhidden mark on disable option.</li>
</ul>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date><![CDATA[2012-05-20 11:07:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-20 11:07:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-02-17 17:57:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-02-17 17:57:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-hide-drive-in-windows]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="hide-data"><![CDATA[hide data]]></category>
		<category domain="post_tag" nicename="hide-drive"><![CDATA[hide drive]]></category>
		<category domain="post_tag" nicename="hiding"><![CDATA[hiding]]></category>
		<category domain="post_tag" nicename="windows"><![CDATA[windows]]></category>
		<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_blog]]></wp:meta_key>
		<wp:meta_value><![CDATA[chirag1992m.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_author]]></wp:meta_key>
		<wp:meta_value><![CDATA[chirag maheshwari]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_permalink]]></wp:meta_key>
		<wp:meta_value><![CDATA[/2012/05/how-to-hide-drive-in-windows.html]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_blogger_self]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://www.blogger.com/feeds/4569713466918303892/posts/default/6970647897504300367]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[How to hide files in windows]]></title>
		<link>https://digital-madness.in/2011/how-to-hide-files-in-windows/</link>
		<pubDate>Fri, 10 Jun 2011 21:57:00 +0000</pubDate>
		<dc:creator><![CDATA[chirag1992m]]></dc:creator>
		<guid isPermaLink="false">http://digital-madness.in/blog/2011/%month%/how-to-hide-files-in-windows/</guid>
		<description></description>
		<content:encoded><![CDATA[<div dir="ltr">

i guess this one is fairly important for "guys"...so just go through it...I assure you, you will find this quite important...:D

This thing is a basic feature provided by the <a href="http://en.wikipedia.org/wiki/NTFS">NTFS</a> file system. It also provides the feature of encrypting a file with your own "encryption" method but I'll come back later to it. Now lets just focus on the "hiding a file".

NTFS supports <b>multiple data streams. </b>Actually you must have seen the <b>.mkv</b> movie file, its most astonishing feature is that it can contain various types of data in <i>one</i> file like the multiple audios, multiple subtitle files, and yes the movie :P. So,basically in NTFS <i>one </i>file contain multiple data streams<i> </i>independent of each other. In a layman language, NTFS can have a file containing other file<b>s</b> totally independent of each other. for e.g., a simple .pdf can contain files like .txt, .avi, .zip, etc..

This feature can be exploited to hide files on the NTFS partition. For hiding, all we need to do is to create a data stream in the <i>container</i> file ( say important.txt) and copy the contents of the same hiding file (say porn.avi ) in that data stream. and one more thing, you can hide as many files as you want in one single file.

So here's the step by step process :
1.  install some virtual linux environment. That can be anyone of them - cygwin or UnixUtils. This is just to use to use the "cat" command.

2. Now open the command prompt and write,

[sourcecode]    cat porn.avi &gt; important.txt:stream_name[/sourcecode]

this stream_name can be any secret name you prefer. e.g.,

[sourcecode]    cat porn.avi &gt; important.txt:porn.avi[/sourcecode]

3. the file is now saved in data stream "<b>important.txt:porn.avi</b>". The file porn.avi now can be safely deleted without losing any data.

4. Now to extract back the file you just have to write the command,

[sourcecode]    cat important.txt:porn.avi &gt; porn.avi[/sourcecode]

this will give you the file back you wanted. ;)

This method is excellent as the data stream cannot be easily detected as it does not even increases the size of the <i>container</i> file. But it has some limitations :

1. This works only in NTFS file system.

2. If the file is transferred to any other file system (FAT32, EXT2, etc.) all the data streams are lost.

3. A data stream cannot be directly accesses through a software. So it has to first extracted to be of use. This feature is not so annoying as this is something we are already been used to by the compressing softwares.

4. various meta-data related to a file are deleted in the data stream.

5. data stream once created cannot be deleted. One way is to make a copy of the file and delete the previous one. e.g.,
cat important.txt &gt; copy_important.txt
del important.txt

6. data recovery tools do not handle data streams. so if a file system gets corrupted. there is no way to get back the file.

7. you have to remember the exact name of the stream to everytime extract the file.

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date><![CDATA[2011-06-10 21:57:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-06-10 21:57:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-02-17 17:56:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-02-17 17:56:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-hide-files-in-windows]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="hide-data"><![CDATA[hide data]]></category>
		<category domain="post_tag" nicename="hide-files"><![CDATA[hide files]]></category>
		<category domain="post_tag" nicename="hiding"><![CDATA[hiding]]></category>
		<category domain="post_tag" nicename="windows"><![CDATA[windows]]></category>
		<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_blog]]></wp:meta_key>
		<wp:meta_value><![CDATA[chirag1992m.blogspot.com]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_author]]></wp:meta_key>
		<wp:meta_value><![CDATA[chirag maheshwari]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[blogger_permalink]]></wp:meta_key>
		<wp:meta_value><![CDATA[/2011/06/how-to-hide-files-in-windows.html]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_blogger_self]]></wp:meta_key>
		<wp:meta_value><![CDATA[https://www.blogger.com/feeds/4569713466918303892/posts/default/138989540199233398]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[Aman Gupta]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[noreply@blogger.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/09371884680276192388</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-10 22:56:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-10 22:56:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[dajjal!!!!! :P]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[chirag1992m]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[noreply@blogger.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/12067178377624599421</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-11 05:06:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-11 05:06:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[haha...but its a big lifesaver in need :P]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[gemtushar]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[noreply@blogger.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/06471858207205655848</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-11 08:56:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-11 08:56:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[awesome work chirag!!!keep going]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[anil]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[noreply@blogger.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.blogger.com/profile/05560170163838517320</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2011-06-12 12:49:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2011-06-12 12:49:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[gud going dude....]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[C++: incomplete type and cannot be defined]]></title>
		<link>https://digital-madness.in/2013/c-incomplete-type-and-cannot-be-defined/</link>
		<pubDate>Fri, 15 Feb 2013 07:37:40 +0000</pubDate>
		<dc:creator><![CDATA[chirag1992m]]></dc:creator>
		<guid isPermaLink="false">http://digital-madness.in/blog/?p=94</guid>
		<description></description>
		<content:encoded><![CDATA[A very confusing error just now:
error: aggregate ‘std::ofstream out’ has incomplete type and cannot be defined

from simple code:
std::ofstream out;

And the similar one:
error: variable ‘std::ofstream out’ has initialiser but incomplete type

from this code:
std::ofstream out(fname.c_str(),std::ios_base::app);

Using this didn't help:
#include &lt;iostream&gt;

Using this also didn't help:
#include &lt;ofstream&gt;

That was confusing me most, but now I see I've been getting "error: ofstream: No such file or directory" and I was missing it in the noise of other warnings and errors.

The solution was simple:
#include &lt;fstream&gt;
Yes, a very simple solution, but google wasn't helping. If it had been saying "ofstream is not a member of std" I'd have known I was missing a header file; a strange error message has you looking in other places. (I guess another std header file is doing a forward declaration for ofstream, which is why we get "incomplete type".)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date><![CDATA[2013-02-15 07:37:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-15 07:37:40]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-02-17 18:00:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-02-17 18:00:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[c-incomplete-type-and-cannot-be-defined]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="cpp"><![CDATA[C++]]></category>
		<category domain="post_tag" nicename="incomplete-type-and-cannot-be-defined"><![CDATA[incomplete type and cannot be defined]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>6379</wp:comment_id>
			<wp:comment_author><![CDATA[Axel]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[abernardinis@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[93.189.189.70]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-11-23 20:24:02]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-11-23 20:24:02]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks a lot! I had the same problem, and, as you said, the compiler doesn't help at all with that strange message.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385238242.8002140522003173828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385277636.4519488811492919921875;s:7:"message";s:50:"chirag1992m changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[GitHub for beginners (debian/ubuntu/linux)]]></title>
		<link>https://digital-madness.in/2013/github-for-beginners-debianubuntulinux/</link>
		<pubDate>Fri, 15 Feb 2013 22:44:59 +0000</pubDate>
		<dc:creator><![CDATA[chirag1992m]]></dc:creator>
		<guid isPermaLink="false">http://digital-madness.in/blog/?p=99</guid>
		<description></description>
		<content:encoded><![CDATA[Just yesterday I was trying to setup my first github repository, but it wasn't that easy I thought it would be. YES I know, github has a support page, but  it didn't seemed to work for me.

So here, I'll give you a little introduction on the initial setup of git on your local machine and setting up of your cloud repository on github. This tutorial is for debian/ubuntu users.

<strong><span style="text-decoration: underline;">GIT</span>
</strong>Git is an extremely fast, efficient, distributed version control system ideal for the collaborative development of software.

<span style="text-decoration: underline;"><strong>GITHUB
</strong></span>GitHub is the best way to collaborate with others. Fork, send pull requests and manage all your public and private git repositories. In simple terms, it is a cloud storage for all your repositories, be it local or distributed.<strong>
</strong>

<span style="text-decoration: underline;"><strong>SETTING UP OF GIT REPOSITORY ON LOCA</strong><strong>L</strong></span><strong><span style="text-decoration: underline;"> MACHINE</span>
<span style="color: #ff0000;">NOTE:</span> GIT CAN BE USED WITH/WITHOUT GITHUB. GIT is a subversion control system which can just be used solely on your local machine without using github at all.</strong>

First we'll setup git on the local machine and create a local repository.
Install GIT using the command on your terminal:

[bash]sudo apt-get install git[/bash]

This will install git on your machine. Now you we’ll start by doing a bit of configuration. Every commit you make will have your name and email address to identify the ‘owner’ of the commit, so you should start by giving it those values. To do so, run these commands:

[bash]git config --global user.name "your name"
git config --global user.email "your@email.com"[/bash]

So Git knows who you are now. Let's work upon the local repository we were talking about,  just imagine you are creating a simple PHP web app. (Of course, the bigger the project, the brighter Git shines, but we’re just learning the tools, right?) We've got an empty directory called ‘project’. Add all your project files in the new created empty directory. This is the base directory for your repository. To get started with your very own repository, first change your current working directory to the base repository directory and initialize git. Type:

[bash]cd /path/to/project/
touch README.md
git init
git add *
git commit -m "commit message"
git status[/bash]

Let me explain each command I typed:
<ul>
 	<li>cd /path/to/project/: This just changes your current working directory to the project directory for setting up of repository.</li>
 	<li>touch README.md: README.md is a file used by github as a default readme file. So we create an empty file. This step is not necessary, but it surely makes you ready for uploading your repository on github.</li>
 	<li>git init: this initializes your git repository by making a ".git" directory as a sub-directory to your project directory. This is the magic black box used by git where all the different branches, logs and commits are kept.</li>
 	<li>git add *: This adds all the files to be committed to a staging area. The staging area is a spot to hold files for your next commit; maybe you don’t want to commit all your current changes, so you put some in the staging area. "*" is used to add all the files. You can be specific in adding files. Just use '*.js' to only add javascript files.
you can remove files from the staging area and subsequently from your commit using the command: git rm file_name</li>
 	<li>git commit -m "commit message": It finally commits the staged files and logs the given commit message for you to recognize your commit later on when you want to rollback or branch.
For skipping the staging area and updating all the <strong>already</strong> committed files use:

[bash]git commit -am "commit updated"[/bash]

</li>
 	<li>git status: The <em>git status</em> command allows you to see the current state of your code. We've just done a commit, so <em>git status</em> will show us that there’s nothing new. If you continue working on your imaginary project, you’ll see that the status changes. If you have any new files, it will show you the files under "untracked files." or if you have made changes to the files already committed, it will show you the files under "changed but not updated". Again running the add and commit commands will add these new/changed files to a new commit.</li>
</ul>
You can checkout all the available commands/features on git here: <a href="http://git-scm.com/book/commands">http://git-scm.com/book/commands</a>

you can similarly setup more repositories on your local machine. :)

<span style="text-decoration: underline;"><strong>SETTING UP GITHUB REPOSITORY</strong></span>

Git is a great way to share code with others and work on projects together. There are a number of Git repository hosting sites. We’ll just look at one.
First I expect you to make an account on GitHub here: <a href="https://github.com/">https://github.com/</a>

When you're done with it, create a cloud repository. Instructions are given here: <a href="https://help.github.com/articles/creating-a-new-repository">https://help.github.com/articles/creating-a-new-repository</a>

So when your're done with all this, you can go further and start committing your code on the cloud. For committing your code online, you will need a SSH public key, so let’s create that right now! Open your terminal and type:

[bash]cd ~
ssh-keygen -t rsa -C "your@email.com"[/bash]

This creates a SSH public key to be used in connecting to GitHub. The t option assigns a type, and the C option adds a comment, traditionally your email address. You’ll then be asked where to save the key; just hitting enter will do (that saves the file to the default location). Then, just hit enter again twice when it asks you for a pass-phrase (pass-phrase is just a headache. If you type one, you will have to type one everytime you connect to github).

The key is stored in the default directory which is ~/.ssh/
Copy the contents of the public key. Here's how you can do it from the terminal:

[bash]sudo apt-get install xclip

cd ~/.ssh/
cat id_rsa.pub | xclip[/bash]

This copies the content of your public key to your clipboard. If you directly copy it using a text editor, remember not to add any newlines or white-space.
Now go to your GitHub account. Go to account settings. Click on SSH keys tab and finally click on add SSH key. Copy the contents of the clipboard in the key section. You can give any title you want. Now try connecting to the github server using SSH. Just type in your terminal:

[bash]ssh -vT git@github.com[/bash]

You should be able to connect to the github server. If not, and getting an <strong>agent forwarding error </strong>you may have to unset SSH_AUTH_SOCK. You can read more about ssh and public keys and agent forwarding here:
<a href="http://www.unixwiz.net/techtips/openssh.html">http://www.unixwiz.net/techtips/openssh.html
</a><a href="http://www.unixwiz.net/techtips/ssh-agent-forwarding.html">http://www.unixwiz.net/techtips/ssh-agent-forwarding.html</a>

To unset the environment variable:

[bash]unset SSH_AUTH_SOCK[/bash]

Try and connect to the github server once again. If still not able to connect, use the github help: <a href="https://help.github.com/articles/">https://help.github.com/articles/</a>

Once you are able to contact the github server, you can start uploading your commits to your cloud repository. Here's how you can do that:

[bash]cd /path/to/project/
git remote add origin git@github.com:username/cloud_repository_name.git
git push origin master[/bash]

This pushes the master branch to the origin remote. Now you’re project is available to the world! Head back to your project page and see your project. If you are getting an error in uploading the, again try connecting to the github server using ssh and debug the connection.

You might be on the other end of a project: you’re a contributor instead of the owner. When the owner pushes a new commit to the repository, you can use <em>git pull</em> to get the updates. <em>Git pull</em> is actually a combo tool: it runs <em>git fetch</em> (getting the changes) and <em>git merge</em> (merging them with your current copy).

[bash]git pull[/bash]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date><![CDATA[2013-02-15 22:44:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-15 22:44:59]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-02-17 18:01:04]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-02-17 18:01:04]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[github-for-beginners-debianubuntulinux]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="category" nicename="github"><![CDATA[Github]]></category>
		<category domain="post_tag" nicename="repository"><![CDATA[repository]]></category>
		<category domain="post_tag" nicename="svn"><![CDATA[SVN]]></category>
		<category domain="post_tag" nicename="version-control"><![CDATA[version control]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>8754</wp:comment_id>
			<wp:comment_author><![CDATA[Arun]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[pr.arun@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[122.167.67.69]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-01-14 05:39:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-01-14 05:39:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Chirag,

 That was a very helpful article. There is an errata - on line 3 in the codebox for pushing master to origin, the command should read as :

git push origin master

Thanks much !]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1389677949.54833889007568359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1389680873.0423080921173095703125;s:7:"message";s:50:"chirag1992m changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>10745</wp:comment_id>
			<wp:comment_author><![CDATA[chirag1992m]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chirag1992m.cc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://digital-madness.in/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[14.139.196.5]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-25 16:34:45]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-25 16:34:45]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks :)
updated.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>8754</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1395765285.6597940921783447265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>10575</wp:comment_id>
			<wp:comment_author><![CDATA[Mikael]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mikael@laeder.se]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.136.22.28]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-22 11:53:41]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-22 11:53:41]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you!

Very easy to follow and now I have a repository in GitHub.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1395513215.6281330585479736328125;s:7:"message";s:50:"chirag1992m changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1395489221.6595900058746337890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>13452</wp:comment_id>
			<wp:comment_author><![CDATA[An]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tranlaman@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[137.132.250.12]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-07-26 03:48:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-07-26 03:48:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks for tutorial]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1406346530.8139660358428955078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1406359850.64264392852783203125;s:7:"message";s:50:"chirag1992m changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>29262</wp:comment_id>
			<wp:comment_author><![CDATA[Monika]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[monayewale@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[106.221.149.58]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-07-07 10:29:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-07-07 10:29:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hii  Chirag ,
This is very easy way  to follow Github.
Thank you.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1436265019.6597979068756103515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1436298716.0802900791168212890625;s:7:"message";s:50:"chirag1992m changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>29087</wp:comment_id>
			<wp:comment_author><![CDATA[ganesh kulpe]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ganeshkulpe@mail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://igt</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[182.74.189.130]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-06-10 11:18:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-06-10 11:18:25]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks , very helpful . i was struggle from last two days , finally i have upload code to the server.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1445149996.2370970249176025390625;s:7:"message";s:50:"chirag1992m changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1433935105.781179904937744140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>27443</wp:comment_id>
			<wp:comment_author><![CDATA[CESAR URDANETA]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cesar.urdaneta@betadevconsult.com.br]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[191.180.77.92]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-03-17 19:14:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-03-17 19:14:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good article. 

I have found another errata in the the command "cat id_rsa.pub | xclip", line 4  for copying the contents of RSA public key. You should replace by "cat id_rsa.pub | xclip - sel clip", for accomplishing clipboard copy from the RSA file.

Keep smiling!]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426619657.6271839141845703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426660966.405044078826904296875;s:7:"message";s:50:"chirag1992m changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Download Facebook Album]]></title>
		<link>https://digital-madness.in/2013/download-facebook-album/</link>
		<pubDate>Sat, 23 Feb 2013 15:51:25 +0000</pubDate>
		<dc:creator><![CDATA[chirag1992m]]></dc:creator>
		<guid isPermaLink="false">http://digital-madness.in/blog/?p=109</guid>
		<description></description>
		<content:encoded><![CDATA[Here, I am going to tell you a simple method to download an entire facebook album with just one click.

It is an automated process using a small JavaScript code. All you have to do is:
<ul>
	<li><span style="line-height: 13px;">Go to: <a href="https://github.com/chirag1992m/facebookAlbumDownloader/blob/master/js/downloader_min.js">https://github.com/chirag1992m/facebookAlbumDownloader/blob/master/js/downloader_min.js</a></span></li>
	<li>Select the whole code, and copy it your clipboard.</li>
	<li>Now, Open the facebook album you want to download.</li>
	<li>Scroll down so that you can see all the thumbnails of all the photographs present in the album.</li>
	<li>Copy the js script in the file “js/downloader_min.js”</li>
	<li>In your browser's address bar, paste the code and press enter.</li>
	<li>Voila, all your photos start to download in one click ;)</li>
	<li><span style="color: #ff0000;"><strong>NOTE:</strong></span> You may have to <strong>“allow”</strong> “this site is trying to download multiple files at once”.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date><![CDATA[2013-02-23 15:51:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-02-23 15:51:25]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2013-02-23 15:51:25]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2013-02-23 15:51:25]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[download-facebook-album]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Ubuntu (12.04) upstart (at boot) services]]></title>
		<link>https://digital-madness.in/2013/ubuntu-12-04-upstart-at-boot-services/</link>
		<pubDate>Sun, 07 Apr 2013 00:21:02 +0000</pubDate>
		<dc:creator><![CDATA[chirag1992m]]></dc:creator>
		<guid isPermaLink="false">http://digital-madness.in/blog/?p=115</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Creating your own ubuntu upstart service:</h3>
<ul>
 	<li><span style="line-height: 13px;">Create a shell script. (Name it whatever you want. Here I am assuming it to be "autorun.sh")
</span>

[bash]
vi autorun.sh
[/bash]

</li>
 	<li><span style="line-height: 13px;">Copy the shell script to </span><em style="line-height: 13px;"><strong>/etc/init.d/
</strong></em>

[bash]
sudo cp autorun.sh /etc/init.d/autorun.sh
[/bash]

</li>
 	<li>Make the script executable.

[bash]
sudo chmod +x /etc/init.d/autorun.sh
[/bash]

</li>
 	<li><span style="line-height: 13px;">Update the upstart table of ubuntu by creating symbolic links.
</span>

[bash]
sudo update-rc.d autorun.sh defaults
[/bash]

</li>
 	<li>Done.</li>
</ul>
<h3>To boot an already existing script:</h3>
<ul>
 	<li><span style="line-height: 13px;"><span style="line-height: 13px;"><span style="line-height: 13px;">Update the upstart table of ubuntu by creating symbolic links.</span></span></span>

[bash]
sudo update-rc.d service_name defaults
[/bash]

</li>
 	<li>Enable a disabled upstart service

[bash]
sudo update-rc.d service_name enable
[/bash]

</li>
</ul>
<h3>To remove a script from upstart:</h3>
<ol>
 	<li><span style="line-height: 13px;"><span style="line-height: 13px;"><span style="line-height: 13px;">(option-1)
update the table and remove the script(not necessary)</span></span></span>

[bash]
sudo update-rc.d -f autorun.sh remove
sudo rm /etc/init.d/autorun.sh (optional)
[/bash]

</li>
 	<li>(option-2)
Disable the service from boot

[bash]
sudo update-rc.d -f autorun.sh disable
[/bash]

</li>
 	<li>(option-3)
if there is a configuration file for the script in <strong><strong>/etc/init/</strong></strong>

[bash]
sudo echo 'manual' | /etc/init/scriptname.override
sudo update-rc.d -f scriptname remove
[/bash]

</li>
</ol>
Reference: <a title="Ubuntu Start Cookbook" href="http://upstart.ubuntu.com/cookbook/" target="_blank" rel="noopener">ubuntu upstart cookbook</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>115</wp:post_id>
		<wp:post_date><![CDATA[2013-04-07 00:21:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-04-07 00:21:02]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-02-17 18:01:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-02-17 18:01:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ubuntu-12-04-upstart-at-boot-services]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="boot"><![CDATA[boot]]></category>
		<category domain="post_tag" nicename="linux"><![CDATA[linux]]></category>
		<category domain="post_tag" nicename="services"><![CDATA[services]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[ubuntu]]></category>
		<category domain="category" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<category domain="post_tag" nicename="upstart"><![CDATA[upstart]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>82</wp:comment_id>
			<wp:comment_author><![CDATA[Dabba]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[cyber_claws@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[80.78.211.39]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-04-07 08:36:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-04-07 08:36:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you explain a little what does an upstart means??
                                               -3rd yr, CSE, IIT whatever :-/]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365323793.7269380092620849609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365333328.334497928619384765625;s:7:"message";s:50:"chirag1992m changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>84</wp:comment_id>
			<wp:comment_author><![CDATA[chirag1992m]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chirag1992m.cc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://digital-madness.in/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[14.139.196.5]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-04-07 11:25:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-04-07 11:25:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Upstart in simple language is basically an event-based service starter. service can be anything, from a daemon process like apache, mysql to any shell script you want.
Here I am particularly talking abut the event when a system boots.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>82</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365333904.783154964447021484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>1611</wp:comment_id>
			<wp:comment_author><![CDATA[ActionParsnip]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[andrew.woodhead666@googlemail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://wiki.ubuntu.com/ActionParsnip</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[82.9.34.77]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-07-17 13:50:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-07-17 13:50:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA["sudo echo 'manual' | /etc/init/scriptname.override"

won't work, sudo does not traverse the pipe. You will need to use:

echo 'manual' | sudo tee /etc/init/scriptname.override]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374069054.6177959442138671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377091933.9944550991058349609375;s:7:"message";s:50:"chirag1992m changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>424</wp:comment_id>
			<wp:comment_author><![CDATA[Rain]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rainlists@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[99.29.56.128]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-05-25 21:51:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-05-25 21:51:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[upstart and update-rc.d are not the same thing.

update-rc.d manages old-style sysvinit scripts.

upstart is a completely different animal, with completely different rules. Ubuntu is slowly migrating from old-style sysvinit to upstart, but a lot of things still use the old system (like, regrettably, apache as installed from official repos), so there are both /etc/init.d and /etc/init in an Ubuntu install, and they are not the same at all.

http://upstart.ubuntu.com/]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>84</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369575537.45081996917724609375;s:7:"message";s:50:"chirag1992m changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369518694.147200107574462890625;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369574943.943623065948486328125;s:7:"message";s:45:"chirag1992m reported this comment as not spam";s:5:"event";s:10:"report-ham";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_user_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[chirag1992m]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[fast I/O in C/C++]]></title>
		<link>https://digital-madness.in/2013/fast-io-in-c/</link>
		<pubDate>Fri, 17 May 2013 09:18:12 +0000</pubDate>
		<dc:creator><![CDATA[chirag1992m]]></dc:creator>
		<guid isPermaLink="false">http://digital-madness.in/blog/?p=125</guid>
		<description></description>
		<content:encoded><![CDATA[There many ways to do input/output in C/C++. Some are slow, some are fast and some can be very fast. Here I'll be discussing some of these methods.

Many a times during competetive programming you come across the warning "<strong>Careful - large input/output</strong>". Now what exactly does this means?
This basically means that you have to use an optimized code for your reading/writing to the standard input/output to stay inside the <strong>tighter time constraints</strong> of the problem. So let's get going and explore the different methods to optimize your I/O in C/C++.

All the code can be found here: <a href="https://github.com/chirag1992m/geeky/tree/master/IO-Cplusplus" target="_blank" rel="noopener">GitHub</a>.

First one is the basic method that you guys must already be using. This is based on cin/cout methods of the iostream library. It is the most basic method and does not require you to specify the type of input you are expecting, but, is extremely slow.

[cpp]
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;sstream&gt;

using namespace std;

int main() {
	/* integer or any integer like */
	int integer;
		cin&gt;&gt;integer;
		cout&lt;&lt;integer&lt;&lt;endl;

	/* character string */
	char charstring[100];
		cin&gt;&gt;charstring;	// stops input after a &quot;space&quot;
		cout&lt;&lt;charstring&lt;&lt;endl;

		cin.getline(charstring, 100);	// stops after 100 character or eof whichever comes first
		cout&lt;&lt;charstring&lt;&lt;endl;

	string strstring;
		cin&gt;&gt;strstring;		// stops input after a &quot;space&quot;
		cout&lt;&lt;strstring&lt;&lt;endl;

		getline(cin, strstring);	// stops after eof or '\n', whichever comes first
		cout&lt;&lt;strstring&lt;&lt;endl;

	/* safest way to get an integer (but very slow) - taken from cpluspls.com */
	int number = 0;
	string input;
	while(true) {
		getline(cin, input);

		stringstream myStream(input);
		if(myStream&gt;&gt;number)
			break;
	}

	/* Safest way to get a single character */
	char singlechar = {0};
	while(true) {
		getline(cin, input);

		if(input.length() == 1){
			singlechar = input[0];
			break;
		}
	}
}
[/cpp]

The second method is based on the simple printf/scanf functions of stdio.h library for C. These are much faster than the above method and can be easily used in competetive programming for a decent time limit. These are multi-thread safe as they lock the file before writing.
Detailed description of the stdio.h library you can refer to <a href="http://www.codecogs.com/reference/computing/c/stdio.h/">here</a>.

[cpp]
#include &lt;cstdio&gt;
#include &lt;string&gt;

int main() {
	/* integer I/O */
	int a;
	scanf(&quot;%d&quot;, &amp;a);
	printf(&quot;%d\n&quot;, a);

	/*
        Other format specifiers.
        %d, %i = signed integer
        %u = unsigned integer
        %l = prefix for long
        %f = signed floating point
        %e = signed scientific
        %c = single character
	*/

	/* sting I/O */
	char charstring[100];
	scanf(&quot;%s&quot;, charstring);    // only till the first white space is stored
	printf(&quot;%s\n&quot;, charstring);

	scanf(&quot;%[^\n]s&quot;, charstring);   // sets th delimeter to be &quot;new line&quot;
	printf(&quot;%s\n&quot;, charstring); // thus whole line is read until a \n is observed
								// does not eliminate \n from the input stream

	gets(charstring);
	printf(&quot;%s\n&quot;, charstring);
}
[/cpp]

This method is very fast than the last method and used <strong>unlocked </strong>versions of the above functions used. I have written the code to scan integer and a string. For others you can easily write your function referring the below code. These are NOT multi-thread safe. Should be used in caution. But, in competetive programming plateforms, one program is already separated from others, so can easilt be used for better I/O in competetive programming which have even tighter time constraints.

[cpp]
#include &lt;cstdio&gt;

inline void fastRead_int(int &amp;x) {
    register int c = getchar_unlocked();
    x = 0;
    int neg = 0;

    for(; ((c&lt;48 || c&gt;57) &amp;&amp; c != '-'); c = getchar_unlocked());

    if(c=='-') {
    	neg = 1;
    	c = getchar_unlocked();
    }

    for(; c&gt;47 &amp;&amp; c&lt;58 ; c = getchar_unlocked()) {
    	x = (x&lt;&lt;1) + (x&lt;&lt;3) + c - 48;
    }

    if(neg)
    	x = -x;
}

inline void fastRead_string(char *str)
{
    register char c = 0;
    register int i = 0;

    while (c &lt; 33)
        c = getchar_unlocked();

    while (c != '\n') {
        str[i] = c;
        c = getchar_unlocked();
        i = i + 1;
    }

    str[i] = '&#92;&#48;';
}

int main()
{

  int n;
  char s[100];

  fastRead_int(n);
  	printf(&quot;%d\n&quot;, n);

  fastRead_string(s);
  	printf(&quot;%s\n&quot;, s);
  return 0;
}
[/cpp]

There is another method I came across a solution in one of the problems on <a href="http://www.codechef.com/">codechef</a>. I haven't tested it's performance, but, his solution had the lowest timing with the same logic for the actual problem. So, I am assuming this gives a better performance for I/O. You can download the code <a href="https://github.com/chirag1992m/geeky/blob/master/IO-Cplusplus/method4.cpp">here</a>.
The solution referrenced is <a href="http://www.codechef.com/viewsolution/244848">this</a>.

I'll come up with more updates on the same topic.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>125</wp:post_id>
		<wp:post_date><![CDATA[2013-05-17 09:18:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-05-17 09:18:12]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-02-17 18:01:56]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-02-17 18:01:56]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fast-io-in-c]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="cpp"><![CDATA[C++]]></category>
		<category domain="post_tag" nicename="fast-io"><![CDATA[fast I/O]]></category>
		<category domain="post_tag" nicename="input"><![CDATA[input]]></category>
		<category domain="post_tag" nicename="output"><![CDATA[output]]></category>
		<category domain="category" nicename="time"><![CDATA[Time]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_aioseop_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[fast I/O in C/C++]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_syntaxhighlighter_encoded]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_aioseop_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[It introduces the concept of fast input/output in C/C++]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_aioseop_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[C, C++, fast input, fast output, competetive programming]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_aioseo_title]]></wp:meta_key>
		<wp:meta_value><![CDATA[fast I/O in C/C++ | #site_title]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_aioseo_description]]></wp:meta_key>
		<wp:meta_value><![CDATA[It introduces the concept of fast input/output in C/C++]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_aioseo_keywords]]></wp:meta_key>
		<wp:meta_value><![CDATA[C,C++,fast input,fast output,competetive programming]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>2137</wp:comment_id>
			<wp:comment_author><![CDATA[Rishi Agarwal]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rishiag.iitd@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[180.149.52.45]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-08-05 14:52:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-08-05 14:52:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, what's the point of doing bitwise shift here:  x = (x&lt;&lt;1) + (x&lt;&lt;3) + c - 48;]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375714339.4481379985809326171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377091931.1037170886993408203125;s:7:"message";s:50:"chirag1992m changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>14429</wp:comment_id>
			<wp:comment_author><![CDATA[Grzegorz]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[grzegorz.gp.@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[217.67.201.162]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-08-14 08:16:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-08-14 08:16:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is multiplying by 10
x = x * 10 + c]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410540646.2551829814910888671875;s:7:"message";s:50:"chirag1992m changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1408004176.1742560863494873046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>17626</wp:comment_id>
			<wp:comment_author><![CDATA[Sivakumar K R]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[seevaathome1@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[112.133.192.138]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-09-12 16:46:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-09-12 16:46:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[x=x*2^1+x*2^3+c-48...
Now you can understand what it does.
It multiplies the current value with 10 and then add the incoming character.
lets say x=0,c='5';
x=0+0+53-48;
x=5;
now c='6';
x=5*(2^1)+5*(2^3)+54-48;
 =10+40+54-48---&gt;56;]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>2137</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410540630.9925239086151123046875;s:7:"message";s:50:"chirag1992m changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410540370.4098289012908935546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>30712</wp:comment_id>
			<wp:comment_author><![CDATA[Heat Map Providers]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[outreach@thedigitalbridges.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.thedigitalbridges.com/heat-maps-providers-website-development/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[104.168.142.247]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-05-31 19:17:08]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-05-31 19:17:08]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Chirag,

Great site you got here. I'm not too familiar with C++ but thank you for providing the source to this fix. I also check out GitHub when I'm stuck.

Thanks for the resource.

Dennis]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1464722228.958652019500732421875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1464765118.1053121089935302734375;s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>31350</wp:comment_id>
			<wp:comment_author><![CDATA[Chirag Maheshwari]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chirag1992m.cc@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://digital-madness.in</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[64.245.141.10]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-08 18:34:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-08 18:34:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The required header files are given in the code itself.
For the first one you need: iostream , string and sstream
second part: cstdio and string
For the third code you only need: cstdio]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>31347</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1496946929.1603839397430419921875;s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1496946884.1383740901947021484375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>31381</wp:comment_id>
			<wp:comment_author><![CDATA[Anukul Rawat]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[anukulmickey9@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[111.118.240.172]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-28 17:39:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-28 17:39:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you, btw awesome post. Great help.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>31350</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1498671545.1765949726104736328125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>31347</wp:comment_id>
			<wp:comment_author><![CDATA[Anukul Rawat]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[anukulmickey9@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[111.118.243.172]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2017-06-03 11:23:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2017-06-03 11:23:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Which header file to include ?]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1496635299.7190239429473876953125;s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1496488994.769568920135498046875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					<wp:comment>
			<wp:comment_id>30755</wp:comment_id>
			<wp:comment_author><![CDATA[Solidworks]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[solidworkscrack@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://solidworkscrack.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[45.119.141.154]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-06-30 09:34:44]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-06-30 09:34:44]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks so much for the blog post. Awesome.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1467279284.3892099857330322265625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1467279671.9849479198455810546875;s:5:"event";s:15:"status-approved";s:4:"user";s:11:"chirag1992m";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
				</channel>
</rss>
	
<!--
Performance optimized by W3 Total Cache. Learn more: https://www.boldgrid.com/w3-total-cache/


Served from: digital-madness.in @ 2024-04-18 18:22:22 by W3 Total Cache
-->